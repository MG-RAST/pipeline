cwlVersion: v1.0
class: CommandLineTool
baseCommand: mgrast_qc.pl

hints:
  DockerRequirement:
    dockerPull: mgrast/qc:1.0

requirements:
  InitialWorkDirRequirement:
    listing:
      - entryname: userattr.json
        entry: |
          {
            "stage_id": "075",
            "stage_name": "qc"
          }

inputs:
  seqfile:
    type: File
    inputBinding:
      prefix: -input
  format:
    type: string?
    doc: <fasta|fastq>
    inputBinding:
      prefix: -format
  proc:
    type: int
    default: 8
    inputBinding:
      prefix: -proc
  kmers:
    type: string
    default: 15,6
    inputBinding:
      prefix: -kmers
  out_prefix:
    type: string
    default: qc
    inputBinding:
      prefix: -out_prefix
  assembled:
    type: int
    doc: <0 or 1, default 0>
    default: 0
    inputBinding:
      prefix: -assembled
  filter_options:
    type: string?
    doc: "Default: <filter_ln:min_ln=<MIN>:max_ln=<MAX>:filter_ambig:max_ambig=5:dynamic_trim:min_qual=15:max_lqb=5>"
    inputBinding:
      prefix: -filter_options
                        
  
  
outputs:
      
  drisee:
    type: File[]
    outputBinding:
      glob: $(inputs.out_prefix).drisee.stats
  driseeattr:
    type: File[]
    outputBinding:
      glob: $(inputs.out_prefix).drisee.stats.json  
  driseeinfo:
    type: File[]
    outputBinding:
      glob: $(inputs.out_prefix).drisee.info
  driseeinfoattr:
    type: File[]
    outputBinding:
      glob: $(inputs.out_prefix).drisee.info.json      
  consensus:
    type: File[]
    outputBinding:
      glob: $(inputs.out_prefix).consensus.stats
  consensusattr:
    type: File[]
    outputBinding:
      glob: $(inputs.out_prefix).consensus.stats.json   
  kmer:
    type: File[]
    outputBinding:
      glob: $(inputs.out_prefix).kmer.*.stats
  kmerattr:
    type: File[]
    outputBinding:
      glob: $(inputs.out_prefix).kmer.*.stats.json    
  assembly:
    type: File?
    outputBinding:
      glob: $(inputs.out_prefix).assembly.coverage
  assemblyattr:
    type: File?
    outputBinding:
      glob: $(inputs.out_prefix).assembly.coverage.json    
  qcstats:
    type: File
    outputBinding:
      glob: $(inputs.out_prefix).qc.stats
  qcstatsattr:
    type: File?
    outputBinding:
      glob: $(inputs.out_prefix).qc.stats.json
  uploadstats:
    type: File
    outputBinding:
      glob: $(inputs.out_prefix).upload.stats
  uploadstatsattr:
    type: File?
    outputBinding:
      glob: $(inputs.out_prefix).upload.stats.json           
      
