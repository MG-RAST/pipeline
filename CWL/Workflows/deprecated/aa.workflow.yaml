cwlVersion: v1.0
class: Workflow

requirements:
  - class: InlineJavascriptRequirement
  - class: StepInputExpressionRequirement

inputs:
  jobid : int
  api_key: string?
  db_dir: Directory
  no-shock:
    type: boolean?
    default: true
  sequences: File
  sequencing_method: 
    type: string
    doc: <sanger|454|illumina|complete>
    default: illumina
  
  rna_mapping: File
  rna_sims: File  
  # feature_filter (ff)
  ff_memory:
    type: int?
    default: 8
  ff_overlap:
    type: int?
    default: 10  
  # aa cluster  
  aa_cluster_memory:
    type: int?
    default: 20 
  aa_cluster_pid: 
     type: int?
     default: 90
     
  
  nr_dir: Directory
  nr_prefix: string
  nr_version: string
  nr_part_1: File
  nr_part_2: File
     
  # rna:
  #   type: boolean?
  #   default: true
  # rna_nr_clust: File
  # rna_nr: File
  # rna_nr_version: string
  # rna_pid: int
  # rna_assembled: boolean
  # rna_clust_memory:
  #   type: int
  #   default: 20
    
      

outputs:
  simsAAFile:
    type: File
    outputSource: simsAA/sims
  clusterAAFile:
    type: File
    outputSource: clusterAA/fasta  
 
 
  
        
steps:
  genecalling:
    run: ../Tools/mgrast_genecalling.tool.yaml
    in:
      input: sequences 
      # input: screen/passed
      out_prefix: 
        source: jobid
        valueFrom: $(self).350.genecalling.coding
      type: sequencing_method
      # Using defaults:
      # size: 100
      # proc: 8 
               
    out: [fna,faa]

  filter:
    run: ../Tools/mgrast_filter_feature.tool.yaml
    in:
      in_clust: rna_mapping
      # in_clust: clusterRNA/mapping
      in_sim: rna_sims
      # in_sim: simsRNA/sims
      in_seq: genecalling/faa
      output: 
        source: jobid
        valueFrom: $(self).375.filtering.faa
      memory: ff_memory
      overlap: ff_overlap
    out: [filtered]
    
  clusterAA:
    run: ../Tools/mgrast_cluster_aa.tool.yaml     
    in:      
      input: filter/filtered 
      out_prefix:
        source: jobid
        valueFrom: $(self).550.cluster
      pid: aa_cluster_pid
      memory: aa_cluster_memory
    out: [fasta , mapping]
  
  simsAA:
    run: ../Tools/mgrast_blat_protein.tool.yaml
    in:
      input: clusterAA/fasta
      output: 
        source: jobid
        valueFrom: $(self).650.superblat.sims
      nr_dir: nr_dir  
      nr_prefix:  nr_prefix
      nr_part_1: nr_part_1
      nr_part_2: nr_part_2
      nr_version: nr_version
       
    out: [sims]
     
       
